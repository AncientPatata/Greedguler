from algorithm import *
job_durations = [4, 2, 5, 3, 7, 9, 1]
schedule = allocate_jobs_to_machines(job_durations, 4)


def verifcation_overlap_machine(schedule):
    # Create a dictionary to track the job timeline for each machine
    machine_schedule = {}

    # Iterate through the job schedule list and populate the machine job timeline dictionary
    for machine_jobs in schedule:
        for job in machine_jobs:
            # Extract the machine name
            machine = f"Machine {job['job_index'] + 1}"
            start_time = job['start_time']
            end_time = job['end_time']

            if machine not in machine_schedule:
                machine_schedule[machine] = []

            machine_schedule[machine].append((start_time, end_time))

    # Check if there is any overlap in job start and end times for each machine
    for machine, job_schedule in machine_schedule.items():
        job_schedule.sort()
        for i in range(len(job_schedule) - 1):
            if job_schedule[i][1] > job_schedule[i + 1][0]:
                print(f"There is an overlap in jobs on {machine}")
                break
        else:
            print(f"There is no overlap in jobs on {machine}")


verifcation_overlap_machine(schedule=schedule)
